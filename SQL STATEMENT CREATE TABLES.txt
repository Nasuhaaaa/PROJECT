CREATE TABLE Role (
    role_id INT AUTO_INCREMENT PRIMARY KEY,   
    role_name VARCHAR(50) NOT NULL            
);




CREATE TABLE Department (
    department_ID INT AUTO_INCREMENT PRIMARY KEY, 
    department_name VARCHAR(100) NOT NULL           
);




CREATE TABLE User (
    staff_ID VARCHAR(30) PRIMARY KEY,      
    staff_name VARCHAR(100) NOT NULL,             
    staff_email VARCHAR(100) NOT NULL UNIQUE,      
    password VARCHAR(255) NOT NULL,                
    role_ID INT,                                  
    department_ID INT,                           
    FOREIGN KEY (role_ID) REFERENCES Role(role_id),
    FOREIGN KEY (department_ID) REFERENCES Department(department_ID)
);




CREATE TABLE Permission (
    permission_ID INT AUTO_INCREMENT PRIMARY KEY,  
    permission_name VARCHAR(50) NOT NULL           
);




CREATE TABLE Policy (
    policy_ID INT AUTO_INCREMENT PRIMARY KEY,        
    policy_name VARCHAR(150) NOT NULL,               
    department_ID INT,                             
    date_created DATE,                               
    published_by VARCHAR(30),                                
    last_updated DATE,                               
    modified_by VARCHAR(30),                                 
    file_format VARCHAR(20),                         
    file_path VARCHAR(255),                          
    FOREIGN KEY (department_ID) REFERENCES Department(department_ID),
    FOREIGN KEY (published_by) REFERENCES User(staff_ID),
    FOREIGN KEY (modified_by) REFERENCES User(staff_ID)
);



-------------------------------------------------------------changes made here----------------------------------------------------------------
CREATE TABLE Access_Right (
    access_right_ID INT AUTO_INCREMENT PRIMARY KEY,   
    policy_ID INT,                                   
    permission_ID INT,                               
    valid_from DATE,                                  
    FOREIGN KEY (policy_ID) REFERENCES Policy(policy_ID),
    FOREIGN KEY (permission_ID) REFERENCES Permission(permission_ID)
);

-----------------------------------------------------------------------------------------------------------------------------------------------


CREATE TABLE Audit (
    audit_ID INT AUTO_INCREMENT PRIMARY KEY,
    policy_ID INT,                                   
    modified_by VARCHAR(30),                         
    change_type VARCHAR(50) NOT NULL,                
    change_description TEXT,                         
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,    
    FOREIGN KEY (policy_ID) REFERENCES Policy(policy_ID),
    FOREIGN KEY (modified_by) REFERENCES User(staff_ID)
);



INSERT INTO Role (role_name) VALUES 
('Admin'),
('Editor'), 
('User');


INSERT INTO Department (department_name) VALUES 
('Polisi, Perundangan dan Kesedaran'), 
('Integrasi Teknologi'), 
('Simetrik'), 
('Asimetrik'),
('Migrasi PQC');


INSERT INTO Permission (permission_name) VALUES 
('View Document'), 
('Edit Document'), 
('Delete Document'), 
('Upload Document');


_____________________________________________________________________ 15/5/2025

INSERT INTO User (staff_ID, staff_name, staff_email, password, role_ID, department_ID)
VALUES 
  ('S12345', 'Nasuha Sabir', 'NasuhaAdmin@example.com', 'password123', 1, 1),
  ('S12346', 'Effa Umaira', 'EffaEditor@example.com', 'password456', 2, 1),
  ('S12347', 'Hanie Elvira', 'HanieViewer@example.com', 'password789', 3, 1),
  ('S12348', 'Alieya', 'AlieyaEditor@example.com', 'password101', 2, 2);

_____________________________________________________________________ Request

CREATE TABLE Permission_Request (
  request_ID INT AUTO_INCREMENT PRIMARY KEY,
  staff_ID VARCHAR(30),
  policy_ID INT,
  permission_ID INT,
  request_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  status ENUM('Pending', 'Approved', 'Denied') DEFAULT 'Pending',
  FOREIGN KEY (staff_ID) REFERENCES User(staff_ID),
  FOREIGN KEY (policy_ID) REFERENCES Policy(policy_ID),
  FOREIGN KEY (permission_ID) REFERENCES Permission(permission_ID)
);

_______________________________________________________________________ Add to policy

ALTER TABLE Policy ADD COLUMN is_deleted BOOLEAN DEFAULT FALSE;

_________________________________________________________________________

-- Backup table first (optional but recommended)
CREATE TABLE IF NOT EXISTS Policy_backup AS SELECT * FROM Policy;

-- Add the 'status' column with ENUM values
ALTER TABLE Policy
ADD COLUMN status ENUM('Active', 'Archived') DEFAULT 'Active' AFTER file_path;

-- Optionally, update current policies to ensure proper status
UPDATE Policy SET status = 'Active' WHERE status IS NULL;


______________________________________________________________________________AUDIT TABLE
CREATE TABLE Audit (
    audit_ID INT AUTO_INCREMENT PRIMARY KEY,

    actor_ID VARCHAR(30),
    actor_name VARCHAR(100),

    action_type ENUM(
        'LOGIN', 'FAILED_LOGIN',
        'ADD_USER', 'EDIT_USER', 'DELETE_USER',
        'UPLOAD_DOCUMENT', 'EDIT_DOCUMENT', 'DELETE_DOCUMENT',
        'VIEW_DOCUMENT', 'DOWNLOAD_DOCUMENT'
    ) NOT NULL,

    policy_ID INT DEFAULT NULL,
    policy_name VARCHAR(255),  -- snapshot of policy name

    description TEXT,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (policy_ID) REFERENCES Policy(policy_ID) ON DELETE SET NULL,
    FOREIGN KEY (actor_ID) REFERENCES User(staff_ID) ON DELETE SET NULL
);


ACCESS RIGHT UPDATE
ALTER TABLE Access_Right
ADD COLUMN staff_ID VARCHAR(30),
ADD CONSTRAINT fk_staff_ID FOREIGN KEY (staff_ID) REFERENCES User(staff_ID);

----------------------------------------------------------------------------- 19/6 alter table access_right and permission_request
ALTER TABLE access_right
DROP FOREIGN KEY access_right_ibfk_1;

ALTER TABLE permission_request
DROP FOREIGN KEY permission_request_ibfk_2;

ALTER TABLE access_right
ADD CONSTRAINT access_right_ibfk_1
FOREIGN KEY (policy_ID)
REFERENCES policy(policy_ID)
ON DELETE CASCADE;

ALTER TABLE permission_request
ADD CONSTRAINT permission_request_ibfk_2
FOREIGN KEY (policy_ID)
REFERENCES policy(policy_ID)
ON DELETE CASCADE;




CREATE TABLE edited_policy (
  id INT(11) NOT NULL AUTO_INCREMENT,
  policy_ID INT(11) NOT NULL,
  modified_by VARCHAR(255) NOT NULL,
  file_path VARCHAR(255) NOT NULL,
  file_format VARCHAR(10) NOT NULL,
  edited_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  INDEX (policy_ID),
  CONSTRAINT fk_policy_ID FOREIGN KEY (policy_ID) REFERENCES Policy(policy_ID) ON DELETE CASCADE
);



------------------------------------------request table
ALTER TABLE permission_request ADD COLUMN action_type ENUM('view', 'upload', 'delete', 'edit') NOT NULL AFTER staff_ID;

ALTER TABLE permission_request ADD COLUMN request_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP;

ALTER TABLE permission_request
ADD COLUMN decision_at DATETIME DEFAULT NULL;

